paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Error interno al obtener los usuarios
  /api/users/{id}:
    get:
      summary: Obtiene un usuario por su ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a obtener
          schema:
            type: string
      responses:
        "200":
          description: Usuario obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error interno al obtener el usuario
    delete:
      summary: Elimina un usuario por su ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error interno al eliminar el usuario
    put:
      summary: Actualiza un usuario por su ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: string
      requestBody:
        description: Datos del usuario a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error interno al actualizar el usuario
  /api/users/mock:
    post:
      summary: Crea un usuario mock aleatorio
      tags:
        - Users
      responses:
        "201":
          description: Usuario mock creado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error interno al crear el usuario mock
  /api/users/mocks/{quantity}:
    post:
      summary: Crea múltiples usuarios mock aleatorios
      tags:
        - Users
      parameters:
        - name: quantity
          in: path
          required: true
          description: Cantidad de usuarios mock a crear
          schema:
            type: integer
      responses:
        "201":
          description: Usuarios mock creados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "500":
          description: Error interno al crear los usuarios mock
  /api/users/generate-data:
    post:
      summary: Genera usuarios con mascotas
      tags:
        - Users
      requestBody:
        description: Cantidad de usuarios y mascotas a generar
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: integer
                  description: Número de usuarios a generar
                pets:
                  type: integer
                  description: Número de mascotas por usuario
      responses:
        "201":
          description: Usuarios y mascotas creados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "500":
          description: Error interno al generar los datos
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID del usuario
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        age:
          type: integer
          description: Edad del usuario
        password:
          type: string
          description: Contraseña del usuario
        role:
          type: string
          description: Rol del usuario (user/admin)
        pets:
          type: array
          items:
            type: string
          description: Lista de mascotas asociadas al usuario (si aplica)
